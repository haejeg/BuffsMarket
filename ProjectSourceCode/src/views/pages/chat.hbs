<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Messages</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
  <!-- Header -->
  <header class="bg-primary text-white py-3 mb-4">
    <div class="container">
      <h1 class="text-center">Messages</h1>
    </div>
  </header>

  <main class="container">
    <!-- Message Sending Form -->
    <section class="mb-5">
      <h2 class="mb-3">Send a Message</h2>
      <form action="/chat" method="POST" class="row g-3">
        <div class="col-md-6">
          <label for="receiverID" class="form-label">Receiver ID:</label>
          <input 
            type="text" 
            id="receiverID" 
            name="receiverID" 
            class="form-control" 
            required 
            maxlength="10" 
            pattern="\d+" 
            placeholder="Enter receiver ID">
        </div>
        <div class="col-12">
          <label for="content" class="form-label">Message:</label>
          <textarea 
            id="content" 
            name="content" 
            class="form-control" 
            rows="4" 
            required 
            maxlength="500" 
            placeholder="Type your message here"></textarea>
        </div>
        <div class="col-12">
          <button type="submit" class="btn btn-primary">Send</button>
        </div>
      </form>
      <p id="loadingMessage" class="text-muted mt-3"></p>
      <p id="errorMessage" class="text-danger mt-3"></p>
    </section>

    <!-- Received Messages -->
    <section>
      <h2 class="mb-3">Your Messages</h2>
      <ul id="messagesList" class="list-group">
        <!-- Messages will be dynamically populated here -->
      </ul>
    </section>
  </main>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // The original messaging logic remains unchanged
    async function fetchMessages() {
      const loadingMessage = document.getElementById('loadingMessage');
      try {
        loadingMessage.textContent = 'Loading messages...';

        const response = await fetch('/messages');
        if (!response.ok) {
          throw new Error('Failed to fetch messages');
        }
        const messages = await response.json();

        // Hide the loading message
        loadingMessage.textContent = '';

        // Clear the existing messages
        const messagesList = document.getElementById('messagesList');
        messagesList.innerHTML = '';

        // Render the fetched messages
        if (messages.length === 0) {
          messagesList.innerHTML = '<p class="text-muted">No messages yet.</p>';
        } else {
          messages.forEach((message) => {
            const listItem = document.createElement('li');
            listItem.className = 'list-group-item';
            listItem.innerHTML = `
              <strong>${message.senderNickname}</strong> <small class="text-muted">(${message.timestamp})</small>:
              <p class="mb-0">${message.content}</p>
            `;
            messagesList.appendChild(listItem);
          });
        }
      } catch (error) {
        console.error('Error fetching messages:', error);
        const errorMessage = document.getElementById('errorMessage');
        errorMessage.textContent = 'Error fetching messages. Please try again.';
      }
    }

    // Call fetchMessages on page load
    document.addEventListener('DOMContentLoaded', fetchMessages);
  </script>
</body>
</html>
