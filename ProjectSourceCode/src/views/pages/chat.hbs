<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Messages</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <header>
    <h1>Messages</h1>
  </header>

  <!-- Message Sending Form -->
  <section>
    <h2>Send a Message</h2>
    <form action="/chat" method="POST">
      <label for="receiverID">Receiver ID:</label>
      <input type="text" id="receiverID" name="receiverID" required maxlength="10" pattern="\d+">

      <label for="content">Message:</label>
      <textarea id="content" name="content" required maxlength="500"></textarea>

      <button type="submit">Send</button>
    </form>

    <p id="loadingMessage" style="color: gray;"></p>
    <p id="errorMessage" style="color: red;"></p>
  </section>

  <!-- Received Messages -->
  <section>
    <h2>Your Messages</h2>
    <ul id="messagesList">
      <!-- Messages will be dynamically populated here -->
    </ul>
  </section>


  <script>
    async function fetchMessages() {
      const loadingMessage = document.getElementById('loadingMessage');
      try {
        loadingMessage.textContent = 'Loading messages...';

        const response = await fetch('/messages');
        if (!response.ok) {
          throw new Error('Failed to fetch messages');
        }
        const messages = await response.json();

        // Hide the loading message
        loadingMessage.textContent = '';

        // Clear the existing messages
        const messagesList = document.getElementById('messagesList');
        messagesList.innerHTML = '';

        // Render the fetched messages
        if (messages.length === 0) {
          messagesList.innerHTML = '<p>No messages yet.</p>';
        } else {
          messages.forEach((message) => {
            const listItem = document.createElement('li');
            listItem.innerHTML = `
              <strong>${message.senderNickname}</strong> (${message.timestamp}):
              <p>${message.content}</p>
            `;
            messagesList.appendChild(listItem);
          });
        }
      } catch (error) {
        console.error('Error fetching messages:', error);
        const errorMessage = document.getElementById('errorMessage');
        errorMessage.textContent = 'Error fetching messages. Please try again.';
      }
    }

    // Call fetchMessages on page load
    document.addEventListener('DOMContentLoaded', fetchMessages);
  </script>
</body>
</html>